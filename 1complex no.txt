#include<iostream> 
using namespace std; 
class Complex 
{ 
   public:              
       int real,imag; 
           Complex(int r=0, int i=0) 
           {  
           real =r;imag =i;  
           } 
     friend ostream & operator << (ostream &out, Complex const &obj); 
     friend istream & operator >> (istream &in, Complex const &obj); 
Complex operator + (Complex const &obj) 
           { 
            Complex res; 
            res.real = real + obj.real; 
            res.imag = imag + obj.imag; 
return res; 
            } 
Complex operator * (Complex const &obj) 
          { 
           Complex res; 
           res.real =((real)*(obj.real)-(imag)*(obj.imag)); 
           res.imag =((real)*obj.real)+(obj.real)*(imag); 
return res; 
          } 
}; 
ostream & operator << (ostream &out, Complex const &obj) 
{ 
     out<<obj.real; 
     out<<"+i"<<obj.imag; 
     return out; 
} 
istream & operator>>(istream &in,Complex &obj) 
{ 
     cout<<"\nEnter Real part:"<<endl; 
     in>>obj.real; 
     cout<<"\nEnter Imag part:"<<endl; 
     in>>obj.imag; 
return in; 
} 
int main() 
{ 
  Complex c1,c2,c3,c4; 
  cout<<"\nEnter first number;"; 
  cin>>c1; 
  cout<<"\nEnter second number;"; 
  cin>>c2; 
  c3 = c1+c2; 
  cout<<"\nAddition is:"; 
  cout<<c3; 
  c4 = c1*c2; 
  cout<<"\nMultiplication is:"; 
  cout<<c4<<"\n"; 
return 0; 
}